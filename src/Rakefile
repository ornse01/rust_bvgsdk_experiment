require 'rake/clean'
require 'rake/loaders/makefile'

CC = "#{ENV['GNUi386']}/bin/gcc386"
LINKER = "#{ENV['GNUi386']}/bin/gcc386"
INCDIR = ["#{ENV['BD']}/include", "../src"]
CFLAGS = "-O2 -fno-strength-reduce -mpreferred-stack-boundary=2 -Wall"
CPPFLAGS = "#{INCDIR.map {|item| '-I'+item }.join(' ')} -DPCAT"
LOADLIBES = "-limg  -lapp -ltf -lgcc -lmain_r -ldbg -llang -lg -lsys -lg -lf -lsvc"
LDFLAGS = "-L#{ENV['BD']}/lib/i386e2"
NM = "#{ENV['GNUi386']}/bin/nm"

TARGET = "hello"
TARGET_MAP = "#{TARGET}.map"
TARGET_BIN = "#{TARGET}.out"
DEPS = "Dependencies.mf"
ENV['DEPENDENCIES_OUTPUT'] = DEPS

SRCS = FileList["../src/*.c"]
OBJS = SRCS.pathmap("%f").ext('o')

CLEAN.include(OBJS)
CLOBBER.include(TARGET_MAP)
CLOBBER.include(TARGET_BIN)
CLOBBER.include(DEPS)
CLOBBER.include(FileList["*.d"])

task :default => [:rlib, TARGET_MAP]

file TARGET_BIN => OBJS do |t|
  sh "#{LINKER} #{LDFLAGS} #{t.prerequisites.join(' ')} ../rlib/target/i586-unknown-linux-gnu/debug/libtestlib.a  #{LOADLIBES} -o #{t.name} "
end

rule '.o' => [proc{|t| t.pathmap("../src/%n.c") }] do |t|
  sh "#{CC} #{CFLAGS} #{CPPFLAGS} -c #{t.source} -o #{t.name}"
end

task :rlib do
  cd '../rlib/' do
    sh "cargo build --target=i586-unknown-linux-gnu"
  end
end

rule '.map' => '.out' do |t|
  sh "#{NM} -n #{t.source} > #{t.name}"
end

file "Dependencies.mf" do |t|
  sh "touch #{DEPS}"
end

import "Dependencies.mf"
